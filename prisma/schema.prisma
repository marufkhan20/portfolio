// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Hero {
  id          String   @id @default(cuid())
  name        String
  title       String
  description String
  image       String?
  linkedin    String?
  github      String?
  instagram   String?
  twitter     String?
  fiverr      String?
  upwork      String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model About {
  id          String   @id @default(cuid())
  title       String
  description String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  skills      Skill[]
}

model Skill {
  id        String   @id @default(cuid())
  name      String
  icon      String?
  aboutId   String
  about     About    @relation(fields: [aboutId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Project {
  id           String       @id @default(cuid())
  title        String
  description  String
  image        String?
  github       String?
  demo         String?
  category     String?
  order        Int          @default(0)
  published    Boolean      @default(true)
  featured     Boolean      @default(false)
  createdAt    DateTime     @default(now())
  updatedAt    DateTime     @updatedAt
  technologies Technology[]
  features     Feature[]
  gallery      Gallery[]
}

model Technology {
  id        String   @id @default(cuid())
  name      String
  projectId String
  project   Project  @relation(fields: [projectId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Feature {
  id        String   @id @default(cuid())
  content   String
  projectId String
  project   Project  @relation(fields: [projectId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Gallery {
  id        String   @id @default(cuid())
  url       String
  alt       String?
  projectId String
  project   Project  @relation(fields: [projectId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Review {
  id        String   @id @default(cuid())
  name      String
  role      String?
  content   String
  image     String?
  rating    Int      @default(5)
  verifyUrl String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Message {
  id        String   @id @default(cuid())
  name      String
  email     String
  subject   String?
  content   String
  read      Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
